plugins {
    id 'java'
    id 'maven-publish'
    id 'io.freefair.lombok' version '9.0.0'
    id 'signing'
}

dependencies {
    // For logging
    compileOnly('org.slf4j:slf4j-api:2.0.17')
    compileOnly('ch.qos.logback:logback-classic:1.5.17')

    implementation(project(':rebrickable-api'))
    implementation('org.apache.commons:commons-csv:1.14.1')

    // For testing
    testImplementation(project(':rebrickable-api'))
    testImplementation('ch.qos.logback:logback-classic:1.5.17')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.11.0')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.11.0')
}

test {
    useJUnitPlatform()
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

tasks.register('javadocJar', Jar) {
    from tasks.javadoc
    archiveClassifier.set('javadoc')
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        // Name the publication (e.g., 'mavenJava' or 'release')
        mavenJava(MavenPublication) {
            from components.java // Includes the main JAR
            artifact sourcesJar
            artifact javadocJar

            // REQUIRED POM METADATA
            pom {
                name = "Rebrickable CAtalog Loaders"
                inceptionYear = "2025"
                description = "A Client-Side Reference Implementation of the Rebrickable Catalog"
                url = "https://github.com/followsclosely/rebrickable-api/tree/master/rebrickable-catalog-loaders"

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = "followsclosely"
                        name = "Matthew Wilson"
                        url = "https://github.com/followsclosely"
                    }
                }

                scm {
                    url = "https://github.com/followsclosely/rebrickable-api"
                    connection = "scm:git:git://github.com/followsclosely/rebrickable-api"
                    developerConnection = "scm:git:ssh://git@github.com:followsclosely/rebrickable-api.git"
                }
            }
        }
    }
}

repositories {
    maven {
        // New Portal OSSRH Staging API URL is used for the classic staging flow
        name = 'MavenCentral'
        url = uri('https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/')

        credentials {
            // Read credentials from local or CI properties
            username = project.findProperty('ORG_GRADLE_PROJECT_mavenCentralUsername')
            password = project.findProperty('ORG_GRADLE_PROJECT_mavenCentralPassword')
        }
    }
}

signing {
    // Sign only if publishing task is invoked, so ignore when just building locally
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications.mavenJava
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
}
